buildscript {
	ext {
		kotlinVersion = '1.1.51'
		springBootVersion = '2.0.0.M5'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url 'http://repo.spring.io/plugins-release' }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-noarg'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'propdeps'
apply plugin: 'propdeps-idea'
apply plugin: 'war'
apply plugin: 'docker'


version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
	jcenter()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	maven { url "https://git.captcha.com/maven.git/blob_plain/HEAD:/" }
}

dependencies {

	compile('org.springframework.boot:spring-boot-devtools')

	implementation fileTree(dir: 'libs', include: ['*.jar'])
	compile('org.springframework.boot:spring-boot-starter-web') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging' //by both name and group
	}
	compile("org.springframework.boot:spring-boot-starter-tomcat")
	compile('org.springframework.boot:spring-boot-starter-security') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging' //by both name and group
	}
	compile ('org.springframework.security:spring-security-taglibs')

	compile('org.springframework.boot:spring-boot-starter-actuator') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging' //by both name and group
	}
	compile('org.springframework.boot:spring-boot-starter-log4j2')

	compile('org.apache.tomcat.embed:tomcat-embed-jasper')
	compile('javax.servlet:jstl')

	optional "org.springframework.boot:spring-boot-configuration-processor"
	compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")

	compile ('com.github.penggle:kaptcha:2.3.2')

    testCompile('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging' //by both name and group
	}
	testCompile('org.springframework.security:spring-security-test')

	// Folio-model dependencies
	implementation 'com.google.guava:guava:21.0'
	implementation "com.orientechnologies:orientdb-core:2.2.15"
	implementation "com.orientechnologies:orientdb-graphdb:2.2.15"
	implementation "com.tinkerpop.blueprints:blueprints-core:2.6.0"
	implementation group: 'mysql', name: 'mysql-connector-java', version: '5.1.42'
	implementation project (':anansepay-common')
	implementation project (':anansepay-gateway-web')
	implementation 'org.json:json:20160212'
	implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0"
	implementation 'org.litote.kmongo:kmongo:3.4.0'


}
compileJava.dependsOn(processResources)

bootRun {
	sourceResources sourceSets.main
}

clean.doLast {
	file('build').deleteDir()
	file('out').deleteDir()
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.1'
}

task buildDocker(type: Docker, dependsOn: bootWar) {

	def userHome = System.getProperty("user.home")

	registry = 'gcr.io'
	tag = 'asia.gcr.io/ananse.im/anansepay-gateway-admin'

	docker {
		baseImage "java:8"

		exposePort(8443)
		runCommand("mkdir /usr/anansepay-gateway-admin")
		addFile("build/libs/anansepay-gateway-admin-0.0.1-SNAPSHOT.war", "/usr/anansepay-gateway-admin/anansepay-gateway-admin-0.0.1-SNAPSHOT.war")
		addFile("../src/main/kubernetes/staging-application.properties", "/usr/anansepay-gateway-admin/staging-application.properties")
		addFile("../src/main/kubernetes/production-application.properties", "/usr/anansepay-gateway-admin/production-application.properties")
		//addFile("src/main/docker/anansepay_home", "/usr/anansepay_home")
		addFile("${userHome}/jks/STAR_ananse_im.jks", "/usr/anansepay-gateway-admin/STAR_ananse_im.jks")
		workingDir("/usr/anansepay-gateway-admin")
		entryPoint(["sh", "-c"])
		defaultCommand(["java -jar /usr/anansepay-gateway-admin/anansepay-gateway-admin-0.0.1-SNAPSHOT.war"])

	}

}